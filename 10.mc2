// @endpoint https://warpcloud.senx.io/api/v0/exec
@training/dataset1
<'
 {
        "type": "Polygon",
        "coordinates": [
          [
            [
              -4.356006519604847,
              48.103321421302525
            ],
            [
              -4.368476847583281,
              48.092024390542406
            ],
            [
              -4.354648365072848,
              48.0734654865671
            ],
            [
              -4.311928231603105,
              48.07181548216286
            ],
            [
              -4.298346686279615,
              48.088313145412314
            ],
            [
              -4.327114868645481,
              48.10455817170927
            ],
            [
              -4.356006519604847,
              48.103321421302525
            ]
          ]
        ]
      }
    '>
'polygon' STORE
$polygon  0.01 false GEO.JSON
GEO.REGEXP '~(' SWAP + ')' + 'regexp' STORE

[ $TOKEN 'data.fuel' { 'type' 'gazole' 'loc' $regexp } NOW -1 ] FETCH 'data' STORE
$data NOW 30 d TIMECLIP 
NONEMPTY 'gts' STORE

[ $gts <%
    // Extract lat + lon
    [ 3 7 ] SUBLIST FLATTEN DUP
    [ 1 2 ] SUBLIST LIST-> DROP
    48.0922236 -4.3400943 // Passerelle Jean Marin
    HAVERSINE 'dist' STORE
    <% $dist 5000.0 > %>
    <% NULL 4 SET %> // put null if too far
    IFT
  %> MACROMAPPER 0 0 0 
] MAP NONEMPTY 'gts' STORE

[ $gts bucketizer.min NOW 0 1 ] BUCKETIZE 'gts' STORE

[ $gts []  reducer.min ] REDUCE 'gts' STORE

// Get station value and its metadata (Name of the station)
$gts LIST->
// drop elements count
DROP
'gts' STORE
// get location and flatten
[ $gts LOCATIONS ] FLATTEN
// explode list
LIST-> 
// drop elements count
DROP 
// convert to HHCode
->HHCODE 'hfilter' STORE
// Filter originals by HHCode attribute
[ $data [ ] { 'loc' $hfilter } filter.byattr ] FILTER
// to spot on map
[ SWAP mapper.tostring 0 0 0 ] MAP

$polygon JSON->